<?php
/* $Id: reporte_externo.info,v 1.0 2012/05/16 09:27:00 jmrivero Exp $*/


/**
 * Implementation of hook_menu
 */
function reporte_externo_menu() {
  /*$items = array();
  
  $items['admin/settings/reporte_externo'] = array(
    'title' => 'Reporte casos Mantis',
    'description' => 'Configuración reporte casos Mantis',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('reporte_externo_settings'),
    'access arguments' => array('administer reporte_externo'),
  );
  $items['reporte_externo'] = array(
    'title' => t('Reporte casos Mantis'),
    'page callback' => 'reporte_externo_general',
    'access arguments' => array('access reporte_externo content'),
    'description' => t('Reporte casos Mantis'),
    'type' => MENU_NORMAL_ITEM,
  );
    $items['reporte_externo/general'] = array(
    'title' => t('Reporte casos totales en Mantis'),
    'page callback' => 'reporte_externo_general',
    'access arguments' => array('access reporte_externo content'),
    'description' => t('Reporte casos totales en Mantis'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 1,
  );
  $items['reporte_externo/usuario'] = array(
    'title' => t('Reporte casos del usuario en Mantis'),
    'page callback' => 'reporte_externo_usuario',
    'access arguments' => array('access reporte_externo content'),
    'description' => t('Reporte casos del usuario en Mantis'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
    $items['reporte_externo/listado_totales'] = array(
    'title' => t('Listado de casos Mantis'),
    'page callback' => 'reporte_externo_listado',
    'access arguments' => array('access reporte_externo content'),
    'description' => t('Listado de casos del sistema Mantis'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );

  return $items;*/
}

/**
 * Implementation of hook_perm
 */
function reporte_externo_perm() {
  return array('access reporte_externo content', 'administer reporte_externo','create reporte_externo', 'edit own reporte_externo');
}

/**
 * Settings for reporte_externo
 */
function reporte_externo_settings() {
  /*$form = array();

  $form['reporte_externo_servidor_db'] = array(
    '#type' => 'textfield',
    '#title' => t('Servidor de base de datos'),
    '#default_value' => variable_get('reporte_externo_servidor_db', 'Servidor'),
    '#description' => t('Servidor de base de datos externo.'),
  );
   $form['reporte_externo_db'] = array(
    '#type' => 'textfield',
    '#title' => t('Base de datos'),
    '#default_value' => variable_get('reporte_externo_db', 'Base de datos'),
    '#description' => t('Nombre de la base de datos.'),
  );
  $form['reporte_externo_user'] = array(
    '#type' => 'textfield',
    '#title' => t('Usuario de la base de datos'),
    '#default_value' => variable_get('reporte_externo_user', 'Usuario'),
    '#description' => t('Nombre de usuario para la base de datos.'),
  );
  $form['reporte_externo_pass'] = array(
    '#type' => 'password',
    '#title' => t('Password de la base de datos'),
    '#default_value' => variable_get('reporte_externo_pass', 'Password'),
    '#description' => t('Password para la base de datos.'),
  );
  
  return system_settings_form($form);*/
}

/**
* Implementation of hook_{hook name here}().
*/
function reporte_externo_node_info() {
  return array(
    'reporte_externo' => array(
      'name' => t('Reporte externo'),
      'module' => 'reporte_externo',
      'description' => "Consultas SQL sobre bases de datos externas al sitio.",
      'has_title' => TRUE,
      'title_label' => t('Título del reporte'),
      'has_body' => TRUE,
      'body_label' => t('Consulta SQL a ejecutar'),
    )
  );
}

function reporte_externo_access($op, $node, $account) {

  if ($op == 'create') {
    // Only users with permission to do so may create this node type.
    return user_access('create reporte_externo', $account);
  }

  // Users who create a node may edit or delete it later, assuming they have the
  // necessary permissions.
  if ($op == 'update' || $op == 'delete') {
    if (user_access('edit own reporte_externo', $account) && ($account->uid == $node->uid)) {
      return TRUE;
    }
  }
}


function reporte_externo_form(&$node, $form_state) {
  $type = node_get_types('type', $node);

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => check_plain($type->title_label),
    '#required' => TRUE,
    '#default_value' => $node->title,
    '#weight' => -5
  );

  if ($type->has_body) {
    $form['body_field'] = node_body_field($node, $type->body_label, $type->min_word_count);
  }

  // Now we define the form elements specific to our node type.
  $form['re_servidor'] = array(
    '#type' => 'textfield',
    '#title' => t('Servidor'),
    '#default_value' => isset($node->re_servidor) ? $node->re_servidor : '',
  );
  $form['re_basedatos'] = array(
    '#type' => 'textfield',
    '#title' => t('Base de datos'),
    '#default_value' => isset($node->re_basedatos) ? $node->re_basedatos : '',
  );
  $form['re_usuario'] = array(
    '#type' => 'textfield',
    '#title' => t('Nombre de usuario'),
    '#default_value' => isset($node->re_usuario) ? $node->re_usuario : '',
  );
  $form['re_password'] = array(
    '#type' => 'textfield', 
    '#title' => t('Contraseña'), 
    '#default_value' => isset($node->re_password) ? $node->re_password : '', 
  );
  $form['re_dbtipo'] = array(
    '#type' => 'select',
    '#title' => t('Tipo de servidor de base de datos'),
    //'#default_value' => isset($node->re_dbtipo) ? $node->re_dbtipo : '',
    '#options' => array(
      'mysql' => 'MySQL',
      'mssql' => 'MS SQL', 
    ),
  );

  return $form;
}

function reporte_externo_insert($node) {
  db_query("INSERT INTO {reporte_externo} (vid, nid, re_servidor, re_basedatos, re_usuario, re_password, re_dbtipo) VALUES (%d, %d, '%s', '%s', '%s', '%s', '%s')", $node->vid, $node->nid, $node->re_servidor, $node->re_basedatos, $node->re_usuario, $node->re_password, $node->re_dbtipo);
}

function reporte_externo_update($node) {
  // if this is a new node or we're adding a new revision,
  if ($node->revision) {
    reporte_externo_insert($node);
  }
  else {
    db_query("UPDATE {reporte_externo} SET re_servidor = %s, re_basedatos = %s, re_usuario = %s, re_password = %s, re_dbtipo = %s WHERE vid = %d", $node->re_servidor, $node->re_basedatos, $node->re_usuario, $node->re_password, $node->re_dbtipo);
  }
}

function reporte_externo_load($node) {
  $additions = db_fetch_object(db_query('SELECT re_servidor, re_basedatos, re_usuario, re_password, re_dbtipo FROM {reporte_externo} WHERE vid = %d', $node->vid));
  return $additions;
}

function reporte_externo_nodeapi(&$node, $op, $teaser, $page) {
  switch ($op) {
    case 'delete revision':
      // Notice that we're matching a single revision based on the node's vid.
      db_query('DELETE FROM {reporte_externo} WHERE vid = %d', $node->vid);
      break;
  }
}

function reporte_externo_validate($node, &$form) {
  /*if ($node->quantity) {
    if (!is_numeric($node->quantity)) {
      form_set_error('quantity', t('The quantity must be a number.'));
    }
  }*/
}

function reporte_externo_view($node, $teaser = FALSE, $page = FALSE) {
  $node = node_prepare($node, $teaser);
  $node->content['resultado'] = array(
    '#value' => theme('reporte_externo_generar', $node),
    '#weight' => 1,
  );

  return $node;
}

function reporte_externo_theme($existing, $type, $theme, $path) {
  return array(
    'reporte_externo_generar' => array(
      'arguments' => array('node'),
    ),
  );
}

function theme_reporte_externo_generar($node){

    global $db_url;
    $default_db = $db_url;
    $db_url = array();
    $op=explode("/",$_GET[q]);
   /* print_r($node);
    exit();*/
    //carga informacion de la base de datos para validacion
    $dbserver=$node->re_servidor;
    $dbname=$node->re_basedatos;
    $dbusr=$node->re_usuario;
    $dbpass=$node->re_password;
    $dbtipo=$node->re_dbtipo;
    
    if($node->content['body']['#value']){
        /*echo("body value");
        print_r($node);*/
        $consulta= strip_tags($node->content['body']['#value']);    
    }
    else{
        /*echo("body");
         print_r($node->body);*/
        $consulta= strip_tags($node->body);      
    }
    $header=array();
    $db_url['default']=$default_db;
    $db_url['dbremota']='mysql://'.$dbusr.':'.$dbpass.'@'.$dbserver.'/'.$dbname;
    switch($dbtipo){
        case 'mssql':
            $link = mssql_connect($dbserver, $dbusr, $dbpass);
            if (!$link || !mssql_select_db($dbname, $link)) {
                $ret[]="Error al conectar a la base de datos";
            }

            $result = mssql_query($consulta);
            //carga los registros
            if($result){
               while ($data = mssql_fetch_array($result)) {
                   $row=array();
                   /*print_r($data);
                   exit();*/
                   foreach($data as $campo=>$valor)
                   {
                       if(is_string($campo)){
                           if(!in_array($campo, $header))
                                    $header[]=html_entity_decode(htmlentities($campo,ENT_COMPAT,"ISO-8859-15"),ENT_NOQUOTES, 'UTF-8');
                            $row[]=html_entity_decode(htmlentities($valor,ENT_COMPAT,"ISO-8859-15"),ENT_NOQUOTES, 'UTF-8');
                       }
                   }
                   $rows[]=$row;
              }
            }
            else{
              $ret[]="Error al acceder a los datos";
            }
            mssql_free_result($result);
            mssql_close($link);
            db_connect($db_url['default']);
            break;
        default:

            //activa la conexion con la base de datos remota
            db_set_active('dbremota');
           $result=db_query($consulta);
           //carga los registros
           if($result){
               while ($data = db_fetch_array($result)) {
                   $row=array();
                   foreach($data as $campo=>$valor)
                   {
                        if(!in_array($campo, $header))
                                $header[]=$campo;
                        $row[]=$valor;
                   }
                   $rows[]=$row;
              }
          }
          else{
              $ret[]="Error al acceder a los datos";
          }
        break;
    }
  //activa la base de datos de drupal
  db_set_active('default');
  //genera la tabla
  $ret[]=theme('table', $header, $rows, array('style' => 'width:100%;'));

  //si se selecciona descargar setea los header, imprime la tabla y sale

    if ($op[0] == 'node' && is_numeric($op[1]) && $op[2]=='download' ) {
        drupal_set_header('Content-Type: application/vnd.ms-excel; charset=ISO-8859-1');
        drupal_set_header('Content-Disposition: attachment; filename="'.$node->title.'.xls"');
        print theme('table', $header, $rows, array());
        exit();
    }
    
    return implode(" ",$ret);
}


function reporte_externo_grafica_tortas($cate, $descr){
  $chart = array();
  $chart['#chart_id']="reporte_externo_". strtolower(str_replace(" ","_",$cate));
  $chart['#type'] = CHART_TYPE_PIE;
  $chart['#size'] = chart_size(295, 125);
  $chart['#title']= $cate;
  $chart['#adjust_resolution']= TRUE;

  //Carga datos en la grafica
  foreach($descr as $nombre=>$cantidad)
  {
      $chart['#data'][] = $cantidad;
      $chart['#labels'][] = $nombre." = ".$cantidad;
      $chart['#data_colors'][] = chart_unique_color($nombre);
  }
  return $chart;
}

function reporte_externo_grafica_barras($descr){
  $chart = array();
  $chart['#chart_id']="reporte_externo_totales";
  $chart['#type'] = CHART_TYPE_PIE;
  $chart['#size'] = chart_size(600, 350);
  $chart['#title']= "Totales";
  $chart['#grid_lines'] = chart_grid_lines(30, 15);
  $chart['#bar_size'] = chart_bar_size(15, 5);
  //Carga datos en la grafica
  foreach($descr as $nombre=>$cantidad)
  {

      $chart['#data'][] = $cantidad;
      $chart['#labels'][] = $nombre." = ".$cantidad;
      $chart['#data_colors'][] = chart_unique_color($nombre);
  }

  return $chart;
}